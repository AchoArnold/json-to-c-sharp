name: Build, Test, Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK 6.0
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '6.0.x'
      - name: Install dependencies
        run: dotnet restore
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      - run: npm install
        working-directory: ./src/Web
      - name: Build
        working-directory: ./src/Web
        run: dotnet build --configuration Release --no-restore
      - name: Test
        working-directory: ./src/Web
        run:  dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - name: Codecov
        uses: codecov/codecov-action@v1.5.2
  
  package:
    name: "Build & Push image to Github"
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/json-to-c-sharp

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./src/Web
          push: true
          tags: ghcr.io/achoarnold/json-to-c-sharp
          labels: ${{ steps.meta.outputs.labels }}
  
  deploy:
    needs: package
    name: Build & Push image to ACR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/docker-login@v1
        with:
          login-server: arnoldacho.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build & Publish
        working-directory: ./src/Web
        run: |
          docker build  -t arnoldacho.azurecr.io/json-to-c-sharp:${{ github.sha }}  -t arnoldacho.azurecr.io/json-to-c-sharp:latest --build-arg GIT_COMMIT=${{ github.sha }} .
          docker push  --all-tags arnoldacho.azurecr.io/json-to-c-sharp